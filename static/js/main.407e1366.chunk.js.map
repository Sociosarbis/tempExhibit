{"version":3,"sources":["../external \"window.Hls\"","components/PlayList.tsx","App.tsx","index.tsx"],"names":["module","exports","window","Hls","PlayList","props","onSelect","currentUrl","useState","text","setText","list","setList","loadPlayList","useCallback","split","map","line","trim","name","url","replace","filter","Boolean","localStorage","setItem","JSON","stringify","handleSelect","item","useEffect","parse","getItem","length","prevChapUrl","className","placeholder","style","resize","height","value","onChange","e","target","type","onClick","i","key","cls","urlRegExp","App","prevURL","inputValue","setInputValue","videoUrl","setVideoUrl","hlsRef","useRef","playerRef","handlePlay","player","current","hls","match","detachMedia","test","attachMedia","loadSource","setAttribute","play","on","Events","MANIFEST_PARSED","id","href","ref","controls","crossOrigin","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.407e1366.chunk.js","sourcesContent":["module.exports = window.Hls;","import React, { useCallback, useState, useEffect } from 'react';\nimport cls from 'classnames';\n\ntype PlayListProps = {\n  onSelect: (url: string) => void;\n  currentUrl: string;\n};\n\ntype Resource = {\n  name: string;\n  url: string;\n};\n\nexport default function PlayList(props: PlayListProps) {\n  const { onSelect, currentUrl } = props;\n  const [text, setText] = useState('');\n  const [list, setList] = useState<Resource[]>([]);\n  const loadPlayList = useCallback(() => {\n    const list = text\n      .split('\\n')\n      .map((line) => {\n        const [name, url] = line.trim().split('$');\n        return name && url\n          ? {\n              name,\n              url: url.replace(/^http:/, 'https:'),\n            }\n          : null;\n      })\n      .filter(Boolean) as Resource[];\n    setList(list);\n    window.localStorage.setItem(`PREV_LIST`, JSON.stringify(list));\n  }, [text]);\n\n  const handleSelect = useCallback(\n    (item: Resource) => {\n      window.localStorage.setItem(`PREV_CHAP$${list[0].url}`, item.url);\n      onSelect(item.url);\n    },\n    [onSelect, list],\n  );\n\n  useEffect(() => {\n    try {\n      setList(JSON.parse(window.localStorage.getItem(`PREV_LIST`) || '[]'));\n    } catch {\n      //\n    }\n  }, []);\n\n  useEffect(() => {\n    if (list.length) {\n      const prevChapUrl =\n        window.localStorage.getItem(`PREV_CHAP$${list[0].url}`) || '';\n      if (prevChapUrl) {\n        onSelect(prevChapUrl);\n      }\n    }\n  }, [list, onSelect]);\n  return (\n    <div>\n      <textarea\n        className=\"w-full bg-black input mb-2\"\n        placeholder=\"输入播放列表\"\n        style={{ resize: 'none', height: '100px' }}\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <input\n        type=\"button\"\n        className=\"mr-1 btn mb-2\"\n        value=\"加载播放列表\"\n        onClick={loadPlayList}\n      />\n      <div>\n        {list.map((item, i) => (\n          <input\n            key={i}\n            className={cls([\n              'mr-1',\n              'mb-2',\n              'btn',\n              item.url === currentUrl ? 'btn_selected' : '',\n            ])}\n            type=\"button\"\n            value={item.name}\n            onClick={() => handleSelect(item)}\n          />\n        ))}\n        <span />\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useState, useRef, useEffect } from 'react';\nimport Hls from 'hls.js';\nimport PlayList from './components/PlayList';\n\nconst urlRegExp = /([a-zA-Z0-9]+:)?\\/*?([^#?/:]+)(:\\d+)?([^:#?]*?)(\\?[^#]*)?(#.*)?$/;\n\nfunction App() {\n  const prevURL = window.localStorage.getItem('PREV_URL') || '';\n\n  const [inputValue, setInputValue] = useState(prevURL);\n\n  const [videoUrl, setVideoUrl] = useState('');\n\n  const hlsRef = useRef<Hls | null>(null);\n\n  const playerRef = useRef<HTMLVideoElement | null>(null);\n\n  const handlePlay = useCallback((url: string) => {\n    const player = playerRef.current as HTMLVideoElement;\n    const hls = hlsRef.current as Hls;\n    const match = url.trim().match(urlRegExp);\n    hls.detachMedia();\n    if (match) {\n      let url = match[0];\n      if (match[1] === 'http:') {\n        url = url.replace(/^http:/, 'https:');\n      }\n      setInputValue(url);\n      setVideoUrl(url);\n      window.localStorage.setItem('PREV_URL', url);\n      if (/\\.m3u8/.test(url)) {\n        hls.attachMedia(player);\n        hls.loadSource(url);\n      } else {\n        setInputValue(url);\n        player.setAttribute('src', url);\n        player.play();\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const hls = new Hls();\n    hls.on(Hls.Events.MANIFEST_PARSED, function () {\n      (playerRef.current as HTMLVideoElement).play();\n    });\n    hlsRef.current = hls;\n  }, []);\n\n  return (\n    <div>\n      <input\n        className=\"w-full mb-2 bg-black input\"\n        id=\"url-input\"\n        placeholder=\"视频链接\"\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <div className=\"mb-2\">\n        <input\n          id=\"replace-video-button\"\n          className=\"mr-1 btn\"\n          type=\"button\"\n          value=\"替换视频\"\n          onClick={() => handlePlay(inputValue)}\n        />\n        <button className=\"btn\">\n          <a\n            className=\"text-btn\"\n            href=\"http://www.zuidazy3.net/index.php\"\n            target=\"resource-center\"\n          >\n            资源中心\n          </a>\n        </button>\n      </div>\n      <div className=\"text-center\">\n        <video\n          className=\"w-full\"\n          id=\"player\"\n          ref={playerRef}\n          controls={true}\n          crossOrigin=\"anonymous\"\n        ></video>\n      </div>\n      <PlayList currentUrl={videoUrl} onSelect={(url) => handlePlay(url)} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}