{"version":3,"sources":["components/PlayList.tsx","App.tsx","index.tsx","../external \"window.Hls\""],"names":["useStyle","makeStyles","container","display","gridTemplateColumns","gridRowGap","gridColumnGap","PlayList","props","classes","onSelect","currentUrl","useState","text","setText","list","setList","loadPlayList","useCallback","split","map","line","trim","name","url","replace","filter","Boolean","window","localStorage","setItem","JSON","stringify","handleSelect","item","useEffect","parse","getItem","prevList","value","ref","useRef","current","usePrevious","length","prevChapUrl","className","placeholder","style","resize","height","onChange","e","target","type","onClick","i","key","cls","urlRegExp","App","prevURL","inputValue","setInputValue","videoUrl","setVideoUrl","hlsRef","playerRef","handlePlay","player","hls","match","detachMedia","test","attachMedia","loadSource","setAttribute","play","Hls","on","Events","MANIFEST_PARSED","id","href","controls","crossOrigin","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.29e49c33.chunk.js","sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react';\nimport cls from 'classnames';\nimport { makeStyles } from '@material-ui/core';\n\ntype PlayListProps = {\n  onSelect: (url: string) => void;\n  currentUrl: string;\n};\n\ntype Resource = {\n  name: string;\n  url: string;\n};\n\nconst useStyle = makeStyles({\n  container: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(80px, 1fr))',\n    gridRowGap: '10px',\n    gridColumnGap: '5px',\n  },\n});\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nexport default function PlayList(props: PlayListProps) {\n  const classes = useStyle({});\n  const { onSelect, currentUrl } = props;\n  const [text, setText] = useState('');\n  const [list, setList] = useState<Resource[]>([]);\n  const loadPlayList = useCallback(() => {\n    const list = text\n      .split('\\n')\n      .map((line) => {\n        const [name, url] = line.trim().split('$');\n        return name && url\n          ? {\n              name,\n              url: url.replace(/^http:/, 'https:'),\n            }\n          : null;\n      })\n      .filter(Boolean) as Resource[];\n    setList(list);\n    window.localStorage.setItem(`PREV_LIST`, JSON.stringify(list));\n  }, [text]);\n\n  const handleSelect = useCallback(\n    (item: Resource) => {\n      window.localStorage.setItem(`PREV_CHAP$${list[0].url}`, item.url);\n      onSelect(item.url);\n    },\n    [onSelect, list],\n  );\n\n  useEffect(() => {\n    try {\n      setList(JSON.parse(window.localStorage.getItem(`PREV_LIST`) || '[]'));\n    } catch {\n      //\n    }\n  }, []);\n\n  const prevList = usePrevious(list);\n\n  useEffect(() => {\n    if (list.length && list !== prevList) {\n      const prevChapUrl =\n        window.localStorage.getItem(`PREV_CHAP$${list[0].url}`) || '';\n      if (prevChapUrl) {\n        onSelect(prevChapUrl);\n      }\n    }\n  }, [list, prevList, onSelect]);\n  return (\n    <div>\n      <textarea\n        className=\"w-full bg-black input mb-2\"\n        placeholder=\"输入播放列表\"\n        style={{ resize: 'none', height: '100px' }}\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n      <input\n        type=\"button\"\n        className=\"mr-1 btn mb-2\"\n        value=\"加载播放列表\"\n        onClick={loadPlayList}\n      />\n      <div className={classes.container}>\n        {list.map((item, i) => (\n          <input\n            key={i}\n            className={cls([\n              'btn',\n              item.url === currentUrl ? 'btn_selected' : '',\n            ])}\n            type=\"button\"\n            value={item.name}\n            onClick={() => handleSelect(item)}\n          />\n        ))}\n        <span />\n      </div>\n    </div>\n  );\n}\n","import React, { useCallback, useState, useRef, useEffect } from 'react';\nimport Hls from 'hls.js';\nimport PlayList from './components/PlayList';\n\nconst urlRegExp = /([a-zA-Z0-9]+:)?\\/*?([^#?/:]+)(:\\d+)?([^:#?]*?)(\\?[^#]*)?(#.*)?$/;\n\nfunction App() {\n  const prevURL = window.localStorage.getItem('PREV_URL') || '';\n\n  const [inputValue, setInputValue] = useState(prevURL);\n\n  const [videoUrl, setVideoUrl] = useState('');\n\n  const hlsRef = useRef<Hls | null>(null);\n\n  const playerRef = useRef<HTMLVideoElement | null>(null);\n\n  const handlePlay = useCallback((url: string) => {\n    const player = playerRef.current as HTMLVideoElement;\n    const hls = hlsRef.current as Hls;\n    const match = url.trim().match(urlRegExp);\n    hls.detachMedia();\n    if (match) {\n      let url = match[0];\n      if (match[1] === 'http:') {\n        url = url.replace(/^http:/, 'https:');\n      }\n      setInputValue(url);\n      setVideoUrl(url);\n      window.localStorage.setItem('PREV_URL', url);\n      if (/\\.m3u8/.test(url)) {\n        hls.attachMedia(player);\n        hls.loadSource(url);\n      } else {\n        setInputValue(url);\n        player.setAttribute('src', url);\n        player.play();\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    const hls = new Hls();\n    hls.on(Hls.Events.MANIFEST_PARSED, function () {\n      (playerRef.current as HTMLVideoElement).play();\n    });\n    hlsRef.current = hls;\n  }, []);\n\n  return (\n    <div>\n      <input\n        className=\"w-full mb-2 bg-black input\"\n        id=\"url-input\"\n        placeholder=\"视频链接\"\n        onChange={(e) => setInputValue(e.target.value)}\n      />\n      <div className=\"mb-2\">\n        <input\n          id=\"replace-video-button\"\n          className=\"mr-1 btn\"\n          type=\"button\"\n          value=\"替换视频\"\n          onClick={() => handlePlay(inputValue)}\n        />\n        <button className=\"btn\">\n          <a\n            className=\"text-btn\"\n            href=\"http://www.zuidazy3.net/index.php\"\n            target=\"resource-center\"\n          >\n            资源中心\n          </a>\n        </button>\n      </div>\n      <div className=\"text-center mb-2\">\n        <video\n          className=\"w-full\"\n          id=\"player\"\n          ref={playerRef}\n          controls={true}\n          crossOrigin=\"anonymous\"\n        ></video>\n      </div>\n      <PlayList currentUrl={videoUrl} onSelect={(url) => handlePlay(url)} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = window.Hls;"],"sourceRoot":""}